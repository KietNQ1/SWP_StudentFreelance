@model IEnumerable<StudentFreelance.Models.ApplicationUser>
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Dashboard.cshtml";

    int currentPage = ViewBag.CurrentPage ?? 1;
    int pageSize = ViewBag.PageSize ?? 5;
    int totalPages = ViewBag.TotalPages ?? 1;
    int totalRecords = ViewBag.TotalRecords ?? Model.Count();
    var query = Context.Request.Query;
    int index = (currentPage - 1) * pageSize + 1;
}
<link rel="stylesheet" href="~/css/UserManagest.css" />

<form asp-action="Index" method="get" class="topbar">
    <h1><i class="fas fa-users-cog"></i> User Management</h1>

    <div class="filter-row">
        <div class="filter-group">
            <input type="text" name="searchTerm" placeholder="🔍 Search freelancer..." value="@query["searchTerm"]" />
        </div>

        <div class="filter-group">
            <select name="selectedRole">
                <option value="">👥 All Roles</option>
                @foreach (var role in (ViewBag.AllRoles as List<string> ?? new List<string>()))
                {
                    <option value="@role" @@(role == query["selectedRole"] ? "selected" : "")>@role</option>
                }
            </select>
        </div>

        <div class="filter-group">
            <select name="status">
                <option value="">📊 All Status</option>
                <option value="Active" @@(query["status"] == "Active" ? "selected" : "")>Active</option>
                <option value="Inactive"@@(query["status"] == "Inactive" ? "selected" : "")>Inactive</option>
            </select>
        </div>

        <button type="submit" class="filter-btn">
            <i class="fas fa-filter"></i> Filter
        </button>
    </div>
</form>

<div class="table-container">
    <table class="styled-table">
        <thead>
            <tr>
                <th>#</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                foreach (var user in Model)
                {
                    var statusClass = user.IsActive ? "status-active" : "status-inactive";
                    var rowClass = user.IsActive ? "" : "text-muted";
                    <tr class="@rowClass">
                        <td>@index</td>
                        <td>@(string.IsNullOrEmpty(user.FullName) ? user.Email : user.FullName)</td>
                        <td>@user.Email</td>
                        <td>@user.PhoneNumber</td>
                        <td class="@statusClass">@(user.IsActive ? "Active" : "Inactive")</td>
                        <td>
                            <a href="@Url.Action("Edit", "AdminUser", new { id = user.Id })" class="action-btn edit"><i class="fas fa-edit"></i> Edit</a>
                            @if (user.IsActive)
                            {
                                <form asp-action="Deactivate" asp-route-id="@user.Id" method="post" style="display:inline;">
                                    <button type="submit" class="action-btn delete"><i class="fas fa-trash"></i> Delete</button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Restore" asp-route-id="@user.Id" method="post" style="display:inline;">
                                    <button type="submit" class="action-btn restore"><i class="fas fa-undo"></i> Restore</button>
                                </form>
                            }
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr><td colspan="6" class="no-data">No users found.</td></tr>
            }
        </tbody>
    </table>
</div>

@if (totalPages > 1)
{
    <div class="pagination-container">
        <div class="pagination-info">
            Showing @(((currentPage - 1) * pageSize) + 1) to @(Math.Min(currentPage * pageSize, totalRecords)) of @totalRecords entries
        </div>
        
        <div class="pagination">
            @if (currentPage > 1)
            {
                <a asp-action="Index" 
                   asp-route-pageNumber="1"
                   asp-route-searchTerm="@query["searchTerm"]"
                   asp-route-selectedRole="@query["selectedRole"]"
                   asp-route-status="@query["status"]"
                   asp-route-pageSize="@pageSize"
                   class="pagination-btn">
                    <i class="fas fa-angle-double-left"></i>
                </a>
                
                <a asp-action="Index" 
                   asp-route-pageNumber="@(currentPage - 1)"
                   asp-route-searchTerm="@query["searchTerm"]"
                   asp-route-selectedRole="@query["selectedRole"]"
                   asp-route-status="@query["status"]"
                   asp-route-pageSize="@pageSize"
                   class="pagination-btn">
                    <i class="fas fa-angle-left"></i>
                </a>
            }
            
            @{
                int startPage = Math.Max(1, currentPage - 2);
                int endPage = Math.Min(totalPages, currentPage + 2);
                
                if (startPage > 1)
                {
                    <span class="pagination-ellipsis">...</span>
                }
            }
            
            @for (int i = startPage; i <= endPage; i++)
            {
                <a asp-action="Index" 
                   asp-route-pageNumber="@i"
                   asp-route-searchTerm="@query["searchTerm"]"
                   asp-route-selectedRole="@query["selectedRole"]"
                   asp-route-status="@query["status"]"
                   asp-route-pageSize="@pageSize"
                   class="pagination-btn @(i == currentPage ? "active" : "")">
                    @i
                </a>
            }
            
            @{
                if (endPage < totalPages)
                {
                    <span class="pagination-ellipsis">...</span>
                }
            }
            
            @if (currentPage < totalPages)
            {
                <a asp-action="Index" 
                   asp-route-pageNumber="@(currentPage + 1)"
                   asp-route-searchTerm="@query["searchTerm"]"
                   asp-route-selectedRole="@query["selectedRole"]"
                   asp-route-status="@query["status"]"
                   asp-route-pageSize="@pageSize"
                   class="pagination-btn">
                    <i class="fas fa-angle-right"></i>
                </a>
                
                <a asp-action="Index" 
                   asp-route-pageNumber="@totalPages"
                   asp-route-searchTerm="@query["searchTerm"]"
                   asp-route-selectedRole="@query["selectedRole"]"
                   asp-route-status="@query["status"]"
                   asp-route-pageSize="@pageSize"
                   class="pagination-btn">
                    <i class="fas fa-angle-double-right"></i>
                </a>
            }
        </div>
    </div>
}
