@model IEnumerable<StudentFreelance.Models.Transaction>
@using StudentFreelance.Models.Enums

@{
    ViewData["Title"] = "Qu·∫£n l√≠ thanh to√°n";
    Layout = "_Dashboard";
}

@section Styles {
    <link rel="stylesheet" href="~/css/AdminPayments.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
}

<div class="container-fluid">
    <form asp-action="Payments" method="get" class="topbar">
        <h1><i class="fas fa-money-bill-wave"></i> Qu·∫£n l√≠ thanh to√°n</h1>

        <div class="filter-row">
            <div class="filter-group">
                <input type="text" name="searchUser" placeholder="üîç T√¨m ki·∫øm h·ªçc sinh, nh√† tuy·ªÉn d·ª•ng..." value="@Context.Request.Query["searchUser"]" />
            </div>

            <div class="filter-group">
                <select name="statusId" onchange="this.form.submit()">
                    <option value="">üìä T·∫•t c·∫£ c√°c tr·∫°ng th√°i</option>
                    @foreach (var status in ViewBag.Statuses)
                    {
                        <option value="@status.StatusID" selected="@(Context.Request.Query["statusId"] == status.StatusID.ToString())">
                            @status.StatusName
                        </option>
                    }
                </select>
            </div>

            <button type="submit" class="filter-btn">
                <i class="fas fa-filter"></i> Filter
            </button>
            
            <a asp-action="Index" class="filter-btn">
				<i class="fas fa-arrow-left"></i> Quay v·ªÅ ng∆∞·ªùi d√πng
            </a>
        </div>
    </form>
    
    <div class="table-container">
        @if (Model != null && Model.Any())
        {
            <table class="styled-table" id="transactionsTable">
                <thead>
                    <tr>
                        <th>M√£ s·ªë</th>
                        <th>Ng√†y</th>
                        <th>Ng∆∞·ªùi d√πng</th>
                        <th>Th·ªÉ lo·∫°i</th>
                        <th>T·ªïng ti·ªÅn</th>
                        <th>Tr·∫°ng th√°i</th>
                        <th>Ho·∫°t ƒë·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var transaction in Model)
                    {
                        <tr class="transaction-row" onclick="window.location.href='/AdminUser/TransactionDetail/@transaction.TransactionID'" style="cursor: pointer;">
                            <td>@transaction.TransactionID</td>
                            <td>@transaction.TransactionDate.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>
                                <span class="d-inline-block text-truncate" style="max-width: 150px;">
                                    @transaction.User.FullName (@transaction.User.Email)
                                </span>
                            </td>
                            <td>@transaction.Type.TypeName</td>
                            <td class="@(transaction.TypeID == 1 || transaction.Type.TypeName == "Thanh to√°n cho sinh vi√™n" || transaction.Type.TypeName == "Ho√†n ti·ªÅn" ? "text-success" : "text-danger")">
                                @(transaction.TypeID == 1 || transaction.Type.TypeName == "Thanh to√°n cho sinh vi√™n" || transaction.Type.TypeName == "Ho√†n ti·ªÅn" ? "+" : "-")@transaction.Amount.ToString("C")
                            </td>
                            <td>
                                @if (transaction.StatusID == 2) // Th√†nh c√¥ng
                                {
                                    <span class="status-active">@transaction.Status.StatusName</span>
                                }
                                else if (transaction.StatusID == 3) // Th·∫•t b·∫°i
                                {
                                    <span class="status-inactive">@transaction.Status.StatusName</span>
                                }
                                else // ƒêang x·ª≠ l√Ω or other status
                                {
                                    <span class="status-pending">@transaction.Status.StatusName</span>
                                }
                            </td>
                            <td class="action-cell" onclick="event.stopPropagation()">
                                @if (transaction.StatusID == 1) // Only show actions for pending transactions
                                {
                                    <form asp-action="ProcessTransaction" method="post" style="display: inline;">
                                        <input type="hidden" name="transactionId" value="@transaction.TransactionID" />
                                        <button type="submit" class="action-btn restore" onclick="return confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x·ª≠ l√Ω giao d·ªãch n√†y kh√¥ng?')">
                                            <i class="fas fa-check-circle"></i> X·ª≠ l√Ω
                                        </button>
                                    </form>
                                    <form asp-action="CancelTransaction" method="post" style="display: inline;">
                                        <input type="hidden" name="transactionId" value="@transaction.TransactionID" />
                                        <button type="submit" class="action-btn delete" onclick="return confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy giao d·ªãch n√†y kh√¥ng?')">
                                            <i class="fas fa-times-circle"></i> H·ªßy
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-info">
                No transactions found matching the criteria.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        // Wait for document to be fully loaded
        window.addEventListener('load', function() {
            // Check if jQuery and DataTables are available
            if (window.jQuery && jQuery.fn.DataTable) {
                try {
                    jQuery('#transactionsTable').DataTable({
                        "order": [[1, "desc"]], // Sort by date descending
                        "pageLength": 25,
                        "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                        "language": {
                            "search": "Quick search:",
                            "lengthMenu": "Show _MENU_ entries",
                            "info": "Showing _START_ to _END_ of _TOTAL_ transactions"
                        }
                    });
                    console.log("DataTable initialized successfully");
                } catch (error) {
                    console.error("Error initializing DataTable:", error);
                }
            } else {
                console.error("jQuery or DataTables not loaded");
            }
        });
    </script>
} 