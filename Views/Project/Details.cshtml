@model StudentFreelance.Models.Project

<style>
    :root {
        --primary: #89AC46;
        --accent1: #D3E671;
        --accent2: #F8ED8C;
        --accent3: #FF8989;
        --bs-primary: #89AC46;
    }

    body {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', sans-serif;
    }

    h1, h5, h6 {
        font-weight: 600;
    }

    .breadcrumb {
        background-color: transparent;
        font-size: 0.95rem;
    }

    .card {
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        border-left: 4px solid var(--primary);
    }

    .card-header {
        background-color: var(--accent1);
        color: #333;
        font-weight: 600;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .badge {
        font-size: 0.85rem;
        padding: 0.4em 0.7em;
        border-radius: 20px;
        font-weight: 500;
    }

        .badge.bg-primary {
            background-color: var(--primary) !important;
            color: white;
        }

        .badge.bg-warning {
            background-color: var(--accent2);
            color: #222;
        }

        .badge.bg-info {
            background-color: #9ad0ec;
            color: #222;
        }

        .badge.bg-secondary {
            background-color: var(--accent1);
            color: #222;
        }

        .badge.bg-danger {
            background-color: var(--accent3);
            color: white;
        }

        .badge.bg-success {
            background-color: #6fcf97;
            color: white;
        }

    .list-group-item {
        background-color: #fff;
        border: none;
        padding: 12px 0;
    }

    .btn-outline-primary {
        border-color: var(--primary);
        color: var(--primary);
    }

        .btn-outline-primary:hover {
            background-color: var(--primary);
            color: white;
        }

    .btn-outline-secondary {
        border-color: var(--accent1);
        color: #333;
    }

        .btn-outline-secondary:hover {
            background-color: var(--accent1);
            color: #111;
        }

    .btn-outline-success {
        border-color: #6fcf97;
        color: #6fcf97;
    }

        .btn-outline-success:hover {
            background-color: #6fcf97;
            color: white;
        }

    .btn-success {
        background-color: var(--primary);
        border-color: var(--primary);
        font-weight: 600;
    }

        .btn-success:hover {
            background-color: #6d9138;
            border-color: #6d9138;
        }

    .avatar-placeholder {
        background-color: var(--accent1);
        width: 48px;
        height: 48px;
        border-radius: 50%;
        color: #333;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.2rem;
    }

    .formatted-content p {
        margin-bottom: 1rem;
    }

    .formatted-content ul {
        padding-left: 1.2rem;
    }

    .formatted-content li {
        margin-bottom: 0.5rem;
    }

    .list-group-item .badge {
        font-size: 0.8rem;
    }

    .btn-group .btn {
        font-size: 0.9rem;
    }

    @@media (max-width: 768px) {
        .btn-group

    {
        flex-direction: column;
        width: 100%;
    }

    .btn-group .btn {
        width: 100%;
        margin-bottom: 0.5rem;
    }

    }
</style>


@{
    ViewData["Title"] = Model.Title;
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Project" asp-action="Index">Projects</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
        </ol>
    </nav>

    @if (ViewBag.InactiveMessage != null)
    {
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle-fill me-2"></i> @ViewBag.InactiveMessage
        </div>
    }

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Lỗi!</strong> @ViewBag.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Thành công!</strong> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="mb-3">
                @if (Model.IsHighlighted)
                {
                    <span class="badge bg-warning me-2">Featured</span>
                }
                @if (!Model.IsActive)
                {
                    <span class="badge bg-danger me-2">Đã ẩn</span>
                }
                @Model.Title
            </h1>
            <div class="d-flex flex-wrap mb-3 gap-2">
                <span class="badge bg-primary">@Model.Category.CategoryName</span>
                <span class="badge @(Model.StatusID == 1 ? "bg-success" : Model.StatusID == 2 ? "bg-warning" : "bg-danger")">
                    @Model.Status.StatusName
                </span>
                <span class="badge bg-info">@Model.Type.TypeName</span>
                @if (Model.IsRemoteWork)
                {
                    <span class="badge bg-secondary">Remote Work</span>
                }
            </div>
            <div class="d-flex gap-4 text-muted mb-4">
                <div>
                    <i class="bi bi-calendar-date"></i> Posted: @Model.CreatedAt.ToString("dd/MM/yyyy")
                </div>
                <div>
                    <i class="bi bi-hourglass-split"></i> Deadline: @Model.Deadline.ToString("dd/MM/yyyy")
                </div>
                <div>
                    <i class="bi bi-currency-dollar"></i> Budget: @Model.Budget.ToString("C")
                </div>
            </div>
        </div>
        <div class="col-md-4 text-end">
            @if (User.Identity != null && User.Identity.IsAuthenticated && 
                (User.IsInRole("Admin") || 
                User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == Model.BusinessID.ToString()))
            {
                <div class="btn-group">
                    <a asp-action="Edit" asp-route-id="@Model.ProjectID" class="btn btn-outline-primary">
                        <i class="bi bi-pencil"></i> Edit Project
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.ProjectID" class="btn btn-outline-danger">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                    <a asp-controller="Application" asp-action="ProjectApplications" asp-route-projectId="@Model.ProjectID" 
                       class="btn btn-outline-success">
                        <i class="bi bi-people"></i> Xem ứng viên (@Model.StudentApplications.Count)
                    </a>
                </div>
            }
            else if (User.Identity != null && User.Identity.IsAuthenticated && 
                    User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value != Model.BusinessID.ToString())
            {
                @if (User.IsInRole("Student"))
                {
                    <a asp-controller="Application" asp-action="Apply" asp-route-projectId="@Model.ProjectID" 
                       class="btn btn-success">
                        <i class="bi bi-send"></i> Ứng tuyển vào dự án
                    </a>
                }
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Project Description</h5>
                </div>
                <div class="card-body">
                    <div class="formatted-content">
                        @Html.Raw(Model.Description)
                    </div>
                </div>
            </div>

            @if (Model.ProjectSkillsRequired.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Required Skills</h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var skill in Model.ProjectSkillsRequired)
                            {
                                <span class="badge bg-secondary">@skill.Skill.SkillName</span>
                            }
                        </div>
                    </div>
                </div>
            }

            @if (Model.ProjectAttachments.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Project Attachments</h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            @foreach (var attachment in Model.ProjectAttachments)
                            {
                                <a href="@attachment.FilePath" class="list-group-item list-group-item-action" download>
                                    <div class="d-flex w-100 justify-content-between">
                                        <h6 class="mb-1">@attachment.FileName</h6>
                                        <small>@(attachment.FileSize / 1024) KB</small>
                                    </div>
                                    <small class="text-muted">
                                        Uploaded @attachment.UploadedAt.ToString("dd/MM/yyyy HH:mm")
                                    </small>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Business Information</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="avatar me-3">
                            <div class="avatar-placeholder">
                                @(Model.Business.UserName != null ? Model.Business.UserName.Substring(0, 1).ToUpper() : "U")
                            </div>
                        </div>
                        <div>
                            <h6 class="mb-0">@Model.Business.FullName</h6>
                            <small class="text-muted">Member since @(Model.Business.CreatedAt.ToString("MMM yyyy"))</small>
                        </div>
                    </div>
                    
                    @if (Model.Address != null)
                    {
                        <div class="mb-2">
                            <i class="bi bi-geo-alt"></i> 
                            @Model.Address.DetailAddress, @Model.Address.Ward.Name, 
                            @Model.Address.District.Name, @Model.Address.Province.Name
                        </div>
                    }
                    
                    <div class="mt-3">
                        <a href="#" class="btn btn-outline-secondary btn-sm w-100">
                            <i class="bi bi-person"></i> View Profile
                        </a>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Project Details</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Start Date</span>
                            <span>@Model.StartDate.ToString("dd/MM/yyyy")</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>End Date</span>
                            <span>@Model.EndDate.ToString("dd/MM/yyyy")</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Duration</span>
                            <span>@((Model.EndDate - Model.StartDate).Days) days</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>Applications</span>
                            <span class="badge bg-primary rounded-pill">@Model.StudentApplications.Count</span>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div> 