@model IEnumerable<StudentFreelance.Models.Project>

@{
    ViewData["Title"] = "Quản lý dự án";
    Layout = "_Dashboard";
}

@section Styles {
    <link rel="stylesheet" href="~/css/AdminPayments.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" />
    <style>
        /* Status badge styles */
        .status-badge {
            padding: 8px 12px;
            font-weight: 500;
            border-radius: 8px;
            font-size: 0.85rem;
        }
        
        .status-badge.status-1 {
            background: linear-gradient(135deg, #ecc94b 0%, #d69e2e 100%) !important; /* Đang tuyển */
            box-shadow: 0 4px 12px rgba(236, 201, 75, 0.3);
            color: #333;
        }
        
        .status-badge.status-2 {
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%) !important; /* Đang tiến hành */
            box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);
            color: white;
        }
        
        .status-badge.status-3 {
            background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%) !important; /* Đã hoàn thành */
            box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
            color: white;
        }
        
        .status-badge.status-4 {
            background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%) !important; /* Đã hủy */
            box-shadow: 0 4px 12px rgba(245, 101, 101, 0.3);
            color: white;
        }

        .featured-badge {
            background: linear-gradient(135deg, #D3E671 0%, #89AC46 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(137, 172, 70, 0.3);
        }

        .hidden-badge {
            background: linear-gradient(135deg, #a0aec0 0%, #718096 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(160, 174, 192, 0.3);
        }
        
        .btn-view {
            background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
        }
        
        .btn-view:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(66, 153, 225, 0.4);
            color: white;
        }
        
        .btn-edit {
            background: linear-gradient(135deg, #ecc94b 0%, #d69e2e 100%);
            color: #333;
            box-shadow: 0 4px 12px rgba(236, 201, 75, 0.3);
        }
        
        .btn-edit:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(236, 201, 75, 0.4);
            color: #333;
        }
        
        .btn-delete {
            background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(245, 101, 101, 0.3);
        }
        
        .btn-delete:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(245, 101, 101, 0.4);
            color: white;
        }
        
        .btn-activate {
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);
        }
        
        .btn-activate:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(72, 187, 120, 0.4);
            color: white;
        }
        
        /* Cập nhật màu tiêu đề */
        .topbar h1 {
            background: linear-gradient(135deg, #FF8989 0%, #FF8989 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            font-size: 2.2rem;
            margin-bottom: 20px;
        }
        
        /* Cải thiện phần tìm kiếm và hiển thị */
        .dataTables_wrapper .dataTables_length,
        .dataTables_wrapper .dataTables_filter {
            margin-bottom: 20px;
            margin-top: 20px;
        }
        
        .dataTables_wrapper .dataTables_length {
            float: left;
        }
        
        .dataTables_wrapper .dataTables_filter {
            float: right;
        }
        
        .dataTables_wrapper .dataTables_length select {
            padding: 8px 12px;
            border-radius: 8px;
            border: 2px solid #e2e8f0;
            background-color: white;
        }
        
        .dataTables_wrapper .dataTables_filter input {
            padding: 8px 12px;
            border-radius: 8px;
            border: 2px solid #e2e8f0;
            margin-left: 8px;
            width: 250px;
            background-color: white;
        }
        
        /* Cải thiện nút tạo dự án mới */
        .create-btn {
            background: linear-gradient(135deg, #D3E671 0%, #89AC46 100%);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 12px 24px;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 6px 20px rgba(137, 172, 70, 0.3);
            transition: all 0.3s ease;
        }
        
        .create-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(137, 172, 70, 0.4);
            color: white;
        }
        
        .create-btn i {
            font-size: 1.1rem;
        }
        
        /* Cải thiện khoảng cách */
        .table-container {
            margin-top: 30px;
        }
    </style>
}

<div class="container-fluid">
    <div class="topbar">
        <h1><i class="fas fa-project-diagram"></i> Quản lý dự án</h1>
        
        <div class="d-flex justify-content-end">
            @if (User.Identity != null && User.Identity.IsAuthenticated)
            {
                <a asp-action="Create" class="create-btn">
                    <i class="fas fa-plus-circle"></i> Tạo dự án mới
                </a>
            }
        </div>
    </div>
    
    <div class="table-container">
        <table class="styled-table" id="projectsTable">
            <thead>
                <tr>
                    <th>Tiêu đề</th>
                    <th>Danh mục</th>
                    <th>Ngân sách</th>
                    <th>Hạn nộp</th>
                    <th>Trạng thái</th>
                    <th>Loại</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (item.IsHighlighted)
                            {
                                <span class="badge featured-badge me-1">Nổi bật</span>
                            }
                            @if (!item.IsActive)
                            {
                                <span class="badge hidden-badge me-1">Đã ẩn</span>
                            }
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Budget) VNĐ</td>
                        <td>@item.Deadline.ToString("dd/MM/yyyy")</td>
                        <td>
                            <span class="badge status-badge status-@(item.StatusID)">
                                @Html.DisplayFor(modelItem => item.Status.StatusName)
                            </span>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Type.TypeName)</td>
                        <td class="action-cell">
                            <a asp-action="Details" asp-route-id="@item.ProjectID" class="action-btn btn-view">
                                <i class="fas fa-eye"></i> Xem
                            </a>
                            @if (User.Identity != null && User.Identity.IsAuthenticated && 
                                (User.IsInRole("Admin") || 
                                 User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == item.BusinessID.ToString()))
                            {
                                <a asp-action="Edit" asp-route-id="@item.ProjectID" class="action-btn btn-edit">
                                    <i class="fas fa-pencil-alt"></i> Sửa
                                </a>
                                @if (item.IsActive)
                                {
                                    <a asp-action="Delete" asp-route-id="@item.ProjectID" class="action-btn btn-delete">
                                        <i class="fas fa-trash-alt"></i> Xóa
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Activate" asp-route-id="@item.ProjectID" class="action-btn btn-activate">
                                        <i class="fas fa-check-circle"></i> Kích hoạt
                                    </a>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            // Khởi tạo DataTables
            try {
                $('#projectsTable').DataTable({
                    "pageLength": 25,
                    "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "Tất cả"]],
                    "language": {
                        "search": "Tìm kiếm:",
                        "lengthMenu": "Hiển thị _MENU_ dự án",
                        "info": "Hiển thị _START_ đến _END_ của _TOTAL_ dự án",
                        "paginate": {
                            "first": "Đầu",
                            "last": "Cuối",
                            "next": "Tiếp",
                            "previous": "Trước"
                        },
                        "zeroRecords": "Không tìm thấy dự án nào phù hợp",
                        "emptyTable": "Không có dự án nào"
                    }
                });
                console.log("DataTable initialized successfully");
            } catch (error) {
                console.error("Error initializing DataTable:", error);
            }
        });
    </script>
    
    <!-- Script riêng cho dropdown sidebar -->
    <script>
        // Đảm bảo DOM đã tải xong
        document.addEventListener('DOMContentLoaded', function() {
            // Định nghĩa hàm toggleDropdown trực tiếp trên window
            window.toggleDropdown = function(button) {
                var dropdown = button.closest(".dropdown");
                
                // Đóng tất cả các dropdown khác
                document.querySelectorAll('.dropdown.open').forEach(function(item) {
                    if (item !== dropdown) {
                        item.classList.remove('open');
                    }
                });
                
                // Toggle class 'open' cho dropdown hiện tại
                dropdown.classList.toggle("open");
                
                // Ngăn sự kiện lan truyền
                event.stopPropagation();
            };
            
            // Đăng ký sự kiện đóng dropdown khi click bên ngoài
            document.addEventListener('click', function(event) {
                if (!event.target.closest('.dropdown')) {
                    document.querySelectorAll('.dropdown.open').forEach(function(dropdown) {
                        dropdown.classList.remove('open');
                    });
                }
            });
            
            // Đảm bảo các nút dropdown có sự kiện click
            document.querySelectorAll('.dropdown-toggle').forEach(function(button) {
                // Xóa sự kiện click cũ nếu có
                button.removeAttribute('onclick');
                
                // Thêm sự kiện click mới
                button.addEventListener('click', function(event) {
                    toggleDropdown(this);
                    event.preventDefault();
                });
            });
        });
    </script>
}

