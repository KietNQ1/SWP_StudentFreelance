@model dynamic
@{
    var categories = ViewBag.Categories as List<StudentFreelance.Models.Category> ?? new List<StudentFreelance.Models.Category>();
    var skills = ViewBag.Skills as List<StudentFreelance.Models.Skill> ?? new List<StudentFreelance.Models.Skill>();
    var businessUsers = ViewBag.BusinessUsers as List<StudentFreelance.Models.ApplicationUser> ?? new List<StudentFreelance.Models.ApplicationUser>();
    
    var query = ViewBag.Query as string ?? string.Empty;
    var categoryId = ViewBag.CategoryId as int? ?? null;
    var skillIds = ViewBag.SkillIds as List<int> ?? new List<int>();
    var userId = ViewBag.UserId as int? ?? null;
    
    // Nhóm các kỹ năng theo danh mục
    var skillsByCategory = skills
        .GroupBy(s => s.CategoryID)
        .ToDictionary(g => g.Key, g => g.ToList());
        
    // Lấy danh sách danh mục chính
    var mainCategories = categories.Where(c => c.CategoryType == "Field" && c.ParentCategoryID == null).ToList();
    
    // Lấy danh sách danh mục con
    var subCategories = categories.Where(c => c.ParentCategoryID != null).ToList();
    
    // Lấy danh sách kỹ năng đã chọn
    var selectedSkills = skills.Where(s => skillIds.Contains(s.SkillID)).ToList();
}

<div class="search-bar bg-light p-3 rounded shadow-sm mb-4">
    <form asp-controller="Search" asp-action="SearchJob" method="get" class="row g-3">
        <div class="col-md-4">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input type="text" class="form-control" name="query" placeholder="Tìm kiếm dự án..." value="@query">
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="category-skills-dropdown">
                <button type="button" class="btn btn-outline-secondary w-100 text-start d-flex justify-content-between align-items-center" id="dropdownCategorySkillsBtn">
                    <span id="selectedCategorySkill">
                        @if (selectedSkills.Any())
                        {
                            if (selectedSkills.Count == 1)
                            {
                                <span>@selectedSkills.First().SkillName</span>
                            }
                            else
                            {
                                <span>@selectedSkills.Count vị trí chuyên môn</span>
                            }
                        }
                        else if (categoryId.HasValue)
                        {
                            var selectedCategory = categories.FirstOrDefault(c => c.CategoryID == categoryId);
                            if (selectedCategory != null)
                            {
                                <span>@selectedCategory.CategoryName</span>
                            }
                            else
                            {
                                <span>Chọn Nhóm nghề, Nghề hoặc Chuyên môn</span>
                            }
                        }
                        else
                        {
                            <span>Chọn Nhóm nghề, Nghề hoặc Chuyên môn</span>
                        }
                    </span>
                    <i class="bi bi-chevron-down"></i>
                </button>
                <div class="category-skills-container" id="categorySkillsContainer">
                    <div class="card">
                        <div class="card-body p-0">
                            <div class="container-fluid">
                                <div class="row">
                                    <!-- Cột danh mục -->
                                    <div class="col-md-4 p-0 category-list">
                                        <div class="list-group list-group-flush">
                                            <div class="list-group-item fw-bold bg-light text-dark">NHÓM NGHỀ</div>
                                            @foreach (var category in categories.Where(c => c.CategoryType == "Field" && c.ParentCategoryID == null))
                                            {
                                                string activeClass = categoryId == category.CategoryID ? "active" : "";
                                                <a href="#" class="list-group-item list-group-item-action category-item @activeClass"
                                                   data-category-id="@category.CategoryID">
                                                    @category.CategoryName
                                                </a>
                                            }
                                        </div>
                                    </div>
                                    
                                    <!-- Cột danh mục con -->
                                    <div class="col-md-4 p-0 subcategory-list">
                                        <div class="list-group list-group-flush">
                                            <div class="list-group-item fw-bold bg-light text-dark">NGHỀ</div>
                                            @foreach (var mainCategory in mainCategories)
                                            {
                                                <div class="subcategory-group" id="subcategory-@mainCategory.CategoryID" style="display: @(categoryId == mainCategory.CategoryID ? "block" : "none");">
                                                    @{
                                                        var categorySubCategories = subCategories.Where(sc => sc.ParentCategoryID == mainCategory.CategoryID).ToList();
                                                        if (categorySubCategories.Any())
                                                        {
                                                            foreach (var subCategory in categorySubCategories)
                                                            {
                                                                string activeClass = categoryId == subCategory.CategoryID ? "active" : "";
                                                                <a href="#" class="list-group-item list-group-item-action subcategory-item @activeClass"
                                                                   data-subcategory-id="@subCategory.CategoryID"
                                                                   data-parent-id="@mainCategory.CategoryID">
                                                                    @subCategory.CategoryName
                                                                </a>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="list-group-item">Không có nghề con</div>
                                                        }
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    
                                    <!-- Cột kỹ năng -->
                                    <div class="col-md-4 p-0 skill-list">
                                        <div class="list-group list-group-flush">
                                            <div class="list-group-item fw-bold bg-light text-dark">VỊ TRÍ CHUYÊN MÔN</div>
                                            <div class="selected-skills-container @(selectedSkills.Any() ? "" : "d-none")">
                                                <div class="list-group-item bg-light text-dark">
                                                    <small>Đã chọn (<span id="selectedSkillsCount">@selectedSkills.Count</span>)</small>
                                                </div>
                                                <div id="selectedSkillsList" class="selected-skills-list">
                                                    @foreach (var skill in selectedSkills)
                                                    {
                                                        <a href="#" class="list-group-item list-group-item-action skill-item selected" 
                                                           data-skill-id="@skill.SkillID" 
                                                           data-category-id="@skill.CategoryID">
                                                            <div class="d-flex justify-content-between align-items-center">
                                                                <span>@skill.SkillName</span>
                                                                <i class="bi bi-check-lg text-success"></i>
                                                            </div>
                                                        </a>
                                                    }
                                                </div>
                                            </div>
                                            @foreach (var category in categories)
                                            {
                                                <div class="skill-group" id="skills-@category.CategoryID" style="display: none;">
                                                    @if (skillsByCategory.ContainsKey(category.CategoryID))
                                                    {
                                                        var orderedSkills = skillsByCategory[category.CategoryID].OrderBy(s => s.SkillName).ToList();
                                                        foreach (var skill in orderedSkills)
                                                        {
                                                            string selectedClass = skillIds.Contains(skill.SkillID) ? "selected" : "";
                                                            <a href="#" class="list-group-item list-group-item-action skill-item @selectedClass"
                                                                data-skill-id="@skill.SkillID"
                                                                data-category-id="@category.CategoryID"
                                                                data-skill-name="@skill.SkillName">
                                                                <div class="d-flex justify-content-between align-items-center">
                                                                    <span>@skill.SkillName</span>
                                                                    @if (skillIds.Contains(skill.SkillID))
                                                                    {
                                                                        <i class="bi bi-check-lg text-success"></i>
                                                                    }
                                                                </div>
                                                            </a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <div class="list-group-item">Không có kỹ năng</div>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer bg-light p-2 d-flex justify-content-between">
                            <button type="button" class="btn btn-outline-secondary" id="clearCategorySkill">Hủy</button>
                            <button type="button" class="btn btn-primary" id="applyCategorySkill">Chọn</button>
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" name="categoryId" id="hiddenCategoryId" value="@categoryId">
            <div id="skillIdsContainer">
                @foreach (var skillId in skillIds)
                {
                    <input type="hidden" name="skillIds" value="@skillId" />
                }
            </div>
        </div>
        
        <div class="col-md-2">
            <select class="form-select" name="userId">
                <option value="">-- Chọn công ty --</option>
                @foreach (var business in businessUsers.OrderBy(b => b.CompanyName))
                {
                    if (userId == business.Id)
                    {
                        <option value="@business.Id" selected>@business.CompanyName</option>
                    }
                    else
                    {
                        <option value="@business.Id">@business.CompanyName</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100" id="searchBtn">Tìm kiếm</button>
        </div>
    </form>
</div>

<style>
.category-skills-dropdown {
    position: relative;
}

.category-skills-container {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 1000;
    display: none;
    margin-top: 0.125rem;
}

.category-skills-container.show {
    display: block;
}

.category-skills-container .card {
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.category-list, .subcategory-list, .skill-list {
    height: 300px;
    overflow-y: auto;
    border-right: 1px solid #dee2e6;
}

.skill-list {
    border-right: none;
}

.list-group-item.active {
    background-color: #e9ecef;
    border-color: #dee2e6;
    color: #212529;
    font-weight: bold;
}

.list-group-item:hover {
    background-color: #f8f9fa;
}

.category-item, .subcategory-item, .skill-item {
    cursor: pointer;
    transition: all 0.2s;
    padding: 0.75rem 1rem;
}

.list-group-item.fw-bold {
    padding: 0.75rem 1rem;
    margin-bottom: 0;
}

#dropdownCategorySkillsBtn {
    height: 38px;
    border-radius: 0.375rem;
    background-color: #fff;
}

.card-footer {
    border-top: 1px solid #dee2e6;
    background-color: #f8f9fa;
}

.card-footer .btn {
    min-width: 80px;
}

.card-footer .btn-primary {
    background-color: #0d6efd;
    border-color: #0d6efd;
}

.skill-item.selected {
    background-color: #f0f9ff;
    border-left: 3px solid #0d6efd;
}

.selected-skills-list {
    border-bottom: 1px solid #dee2e6;
    margin-bottom: 10px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Các phần tử DOM
    const dropdownBtn = document.getElementById('dropdownCategorySkillsBtn');
    const container = document.getElementById('categorySkillsContainer');
    const categoryItems = document.querySelectorAll('.category-item');
    const subcategoryItems = document.querySelectorAll('.subcategory-item');
    const skillItems = document.querySelectorAll('.skill-item');
    const clearBtn = document.getElementById('clearCategorySkill');
    const applyBtn = document.getElementById('applyCategorySkill');
    const searchBtn = document.getElementById('searchBtn');
    const selectedSkillsContainer = document.querySelector('.selected-skills-container');
    const selectedSkillsList = document.getElementById('selectedSkillsList');
    const selectedSkillsCount = document.getElementById('selectedSkillsCount');
    const skillIdsContainer = document.getElementById('skillIdsContainer');
    
    let selectedCategoryId = document.getElementById('hiddenCategoryId').value || null;
    let selectedSkillIds = Array.from(document.querySelectorAll('input[name="skillIds"]')).map(input => input.value);
    let isDropdownOpen = false;
    
    // Hàm hiển thị/ẩn dropdown
    function toggleDropdown() {
        isDropdownOpen = !isDropdownOpen;
        if (isDropdownOpen) {
            container.classList.add('show');
            dropdownBtn.classList.add('active');
        } else {
            container.classList.remove('show');
            dropdownBtn.classList.remove('active');
        }
    }
    
    // Mở dropdown khi click vào button
    dropdownBtn.addEventListener('click', function(e) {
        e.stopPropagation();
        toggleDropdown();
    });
    
    // Ngăn dropdown đóng khi click vào nội dung dropdown
    container.addEventListener('click', function(e) {
        e.stopPropagation();
    });
    
    // Hiển thị danh mục con khi chọn danh mục chính
    categoryItems.forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            // Xóa trạng thái active của tất cả danh mục
            categoryItems.forEach(ci => ci.classList.remove('active'));
            
            // Thêm trạng thái active cho danh mục được chọn
            this.classList.add('active');
            
            const categoryId = this.dataset.categoryId;
            selectedCategoryId = categoryId;
            
            // Ẩn tất cả danh mục con và hiển thị danh mục con của danh mục được chọn
            document.querySelectorAll('.subcategory-group').forEach(group => {
                group.style.display = 'none';
            });
            
            const subcategoryGroup = document.getElementById(`subcategory-${categoryId}`);
            if (subcategoryGroup) {
                subcategoryGroup.style.display = 'block';
            }
            
            // Hiển thị kỹ năng của danh mục được chọn
            document.querySelectorAll('.skill-group').forEach(group => {
                group.style.display = 'none';
            });
            
            const skillGroup = document.getElementById(`skills-${categoryId}`);
            if (skillGroup) {
                skillGroup.style.display = 'block';
            }
            
            // Xóa trạng thái active của tất cả danh mục con
            subcategoryItems.forEach(sci => sci.classList.remove('active'));
        });
    });
    
    // Hiển thị kỹ năng khi chọn danh mục con
    subcategoryItems.forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            // Xóa trạng thái active của tất cả danh mục con
            subcategoryItems.forEach(sci => sci.classList.remove('active'));
            
            // Thêm trạng thái active cho danh mục con được chọn
            this.classList.add('active');
            
            const subcategoryId = this.dataset.subcategoryId;
            selectedCategoryId = subcategoryId;
            
            // Hiển thị kỹ năng của danh mục con được chọn
            document.querySelectorAll('.skill-group').forEach(group => {
                group.style.display = 'none';
            });
            
            const skillGroup = document.getElementById(`skills-${subcategoryId}`);
            if (skillGroup) {
                skillGroup.style.display = 'block';
            }
        });
    });
    
    // Hàm cập nhật danh sách kỹ năng đã chọn
    function updateSelectedSkillsList() {
        // Xóa tất cả các phần tử con hiện tại
        while (selectedSkillsList.firstChild) {
            selectedSkillsList.removeChild(selectedSkillsList.firstChild);
        }
        
        // Xóa tất cả input hidden hiện tại
        while (skillIdsContainer.firstChild) {
            skillIdsContainer.removeChild(skillIdsContainer.firstChild);
        }
        
        // Hiển thị hoặc ẩn container dựa trên số lượng kỹ năng đã chọn
        if (selectedSkillIds.length > 0) {
            selectedSkillsContainer.classList.remove('d-none');
        } else {
            selectedSkillsContainer.classList.add('d-none');
        }
        
        // Cập nhật số lượng kỹ năng đã chọn
        selectedSkillsCount.textContent = selectedSkillIds.length;
        
        // Thêm các kỹ năng đã chọn vào danh sách
        selectedSkillIds.forEach(skillId => {
            const skillItem = document.querySelector(`.skill-item[data-skill-id="${skillId}"]`);
            if (skillItem) {
                const skillName = skillItem.dataset.skillName;
                const categoryId = skillItem.dataset.categoryId;
                
                // Tạo phần tử mới cho danh sách kỹ năng đã chọn
                const newSkillItem = document.createElement('a');
                newSkillItem.href = '#';
                newSkillItem.className = 'list-group-item list-group-item-action skill-item selected';
                newSkillItem.dataset.skillId = skillId;
                newSkillItem.dataset.categoryId = categoryId;
                newSkillItem.dataset.skillName = skillName;
                
                const itemContent = document.createElement('div');
                itemContent.className = 'd-flex justify-content-between align-items-center';
                
                const nameSpan = document.createElement('span');
                nameSpan.textContent = skillName;
                
                const checkIcon = document.createElement('i');
                checkIcon.className = 'bi bi-check-lg text-success';
                
                itemContent.appendChild(nameSpan);
                itemContent.appendChild(checkIcon);
                newSkillItem.appendChild(itemContent);
                
                // Thêm sự kiện click để bỏ chọn kỹ năng
                newSkillItem.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    toggleSkillSelection(skillId);
                });
                
                selectedSkillsList.appendChild(newSkillItem);
                
                // Tạo input hidden cho kỹ năng đã chọn
                const hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = 'skillIds';
                hiddenInput.value = skillId;
                skillIdsContainer.appendChild(hiddenInput);
            }
        });
    }
    
    // Hàm chọn/bỏ chọn kỹ năng
    function toggleSkillSelection(skillId) {
        const index = selectedSkillIds.indexOf(skillId);
        const skillItems = document.querySelectorAll(`.skill-item[data-skill-id="${skillId}"]`);
        
        if (index === -1) {
            // Thêm kỹ năng vào danh sách đã chọn
            selectedSkillIds.push(skillId);
            skillItems.forEach(item => {
                item.classList.add('selected');
                
                // Thêm icon check nếu chưa có
                if (!item.querySelector('.bi-check-lg')) {
                    const itemContent = item.querySelector('div') || item;
                    const checkIcon = document.createElement('i');
                    checkIcon.className = 'bi bi-check-lg text-success';
                    itemContent.appendChild(checkIcon);
                }
            });
        } else {
            // Xóa kỹ năng khỏi danh sách đã chọn
            selectedSkillIds.splice(index, 1);
            skillItems.forEach(item => {
                item.classList.remove('selected');
                
                // Xóa icon check
                const checkIcon = item.querySelector('.bi-check-lg');
                if (checkIcon) {
                    checkIcon.remove();
                }
            });
        }
        
        // Cập nhật danh sách kỹ năng đã chọn
        updateSelectedSkillsList();
    }
    
    // Chọn/bỏ chọn kỹ năng
    skillItems.forEach(item => {
        item.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            const skillId = this.dataset.skillId;
            toggleSkillSelection(skillId);
        });
    });
    
    // Xử lý nút Hủy
    clearBtn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        selectedCategoryId = null;
        selectedSkillIds = [];
        
        // Xóa trạng thái active của tất cả danh mục, danh mục con
        categoryItems.forEach(ci => ci.classList.remove('active'));
        subcategoryItems.forEach(sci => sci.classList.remove('active'));
        
        // Xóa trạng thái selected của tất cả kỹ năng
        skillItems.forEach(si => {
            si.classList.remove('selected');
            const checkIcon = si.querySelector('.bi-check-lg');
            if (checkIcon) {
                checkIcon.remove();
            }
        });
        
        // Cập nhật giá trị hiển thị
        document.getElementById('selectedCategorySkill').innerText = 'Chọn Nhóm nghề, Nghề hoặc Chuyên môn';
        
        // Cập nhật giá trị input hidden
        document.getElementById('hiddenCategoryId').value = '';
        
        // Cập nhật danh sách kỹ năng đã chọn
        updateSelectedSkillsList();
    });
    
    // Xử lý nút Chọn
    applyBtn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        // Cập nhật giá trị input hidden
        document.getElementById('hiddenCategoryId').value = selectedCategoryId || '';
        
        // Cập nhật giá trị hiển thị
        let displayText = 'Chọn Nhóm nghề, Nghề hoặc Chuyên môn';
        
        if (selectedSkillIds.length > 0) {
            if (selectedSkillIds.length === 1) {
                const selectedSkill = document.querySelector(`.skill-item[data-skill-id="${selectedSkillIds[0]}"]`);
                if (selectedSkill) {
                    displayText = selectedSkill.dataset.skillName;
                }
            } else {
                displayText = `${selectedSkillIds.length} vị trí chuyên môn`;
            }
        } else if (selectedCategoryId) {
            const selectedCategory = document.querySelector(`.category-item[data-category-id="${selectedCategoryId}"]`);
            const selectedSubcategory = document.querySelector(`.subcategory-item[data-subcategory-id="${selectedCategoryId}"]`);
            
            if (selectedSubcategory) {
                displayText = selectedSubcategory.innerText;
            } else if (selectedCategory) {
                displayText = selectedCategory.innerText;
            }
        }
        
        document.getElementById('selectedCategorySkill').innerText = displayText;
        
        // Đóng dropdown
        isDropdownOpen = false;
        container.classList.remove('show');
        dropdownBtn.classList.remove('active');
    });
    
    // Đóng dropdown khi nhấn nút tìm kiếm
    searchBtn.addEventListener('click', function() {
        isDropdownOpen = false;
        container.classList.remove('show');
        dropdownBtn.classList.remove('active');
    });
    
    // Hiển thị ban đầu nếu có giá trị được chọn
    if (selectedCategoryId) {
        // Tìm và kích hoạt danh mục được chọn
        const selectedCategory = document.querySelector(`.category-item[data-category-id="${selectedCategoryId}"]`);
        const selectedSubcategory = document.querySelector(`.subcategory-item[data-subcategory-id="${selectedCategoryId}"]`);
        
        if (selectedSubcategory) {
            // Nếu là danh mục con, kích hoạt danh mục cha trước
            const parentId = selectedSubcategory.dataset.parentId;
            const parentCategory = document.querySelector(`.category-item[data-category-id="${parentId}"]`);
            if (parentCategory) {
                parentCategory.click();
            }
            selectedSubcategory.click();
        } else if (selectedCategory) {
            selectedCategory.click();
        }
    }
    
    // Cập nhật danh sách kỹ năng đã chọn ban đầu
    updateSelectedSkillsList();
});
</script> 