@model StudentFreelance.ViewModels.SearchStudentsViewModel
@using System.Linq
@{
    ViewData["Title"] = "Tìm kiếm sinh viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var students = Model.Students;
    var skills = Model.Skills;
    var categories = Model.Categories;
    var selectedSkillIds = Model.SelectedSkillIds;
    
    // Create a list of selected skills for display purposes
    var selectedSkills = new List<dynamic>();
    foreach (var skillId in selectedSkillIds)
    {
        var skill = skills.FirstOrDefault(s => s.SkillID == skillId);
        if (skill != null)
        {
            selectedSkills.Add(new { SkillID = skill.SkillID, SkillName = skill.SkillName });
        }
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/search/searchStudents.css" asp-append-version="true" />
    <style>
        /* Override any conflicting styles with !important */
        .filter-header {
            background-color: #89AC46 !important;
            color: white !important;
        }
        
        /* Sử dụng Select2 cho cả "Chọn kỹ năng" */
        .select2-container {
            width: 100% !important;
            z-index: 9999 !important;
        }
        
        .select2-dropdown {
            z-index: 9999 !important;
            border-color: #dbe8c6 !important;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2) !important;
        }
        
        .select2-selection {
            height: 42px !important;
            min-height: 42px !important;
            border-color: #dbe8c6 !important;
            display: flex !important;
            align-items: center !important;
        }
        
        .select2-selection__rendered {
            line-height: 42px !important;
            padding-left: 12px !important;
        }
        
        .select2-selection__arrow {
            height: 42px !important;
        }
        
        .select2-search__field {
            border-color: #dbe8c6 !important;
        }
        
        .select2-results__option--highlighted {
            background-color: #89AC46 !important;
        }
        
        .select2-container--open {
            z-index: 9999 !important;
        }
        
        /* Đảm bảo parent elements không che khuất dropdown */
        .container, .card, .card-body, .row, .col-md-4, .search-card {
            overflow: visible !important;
        }
        
        /* Tùy chỉnh cho multi-select */
        .select2-selection--multiple {
            min-height: 42px !important;
            max-height: 42px !important;
            border-color: #dbe8c6 !important;
            overflow: hidden !important;
        }
        
        .select2-selection__choice {
            background-color: #D3E671 !important;
            border-color: #89AC46 !important;
            color: #556b29 !important;
            padding: 2px 8px !important;
            margin: 5px 5px 0 0 !important;
            max-width: calc(100% - 10px) !important;
            overflow: hidden !important;
            text-overflow: ellipsis !important;
            white-space: nowrap !important;
            float: left !important;
        }
        
        .select2-selection__choice__remove {
            color: #556b29 !important;
            margin-right: 5px !important;
        }
        
        /* Tùy chỉnh group header */
        .select2-results__group {
            padding: 8px 12px !important;
            font-weight: bold !important;
            color: #89AC46 !important;
            background-color: #f8f9fa !important;
            border-left: 3px solid #89AC46 !important;
        }
        
        /* Fix for multi-selection dropdown */
        .select2-container--default .select2-selection--multiple .select2-selection__rendered {
            white-space: nowrap !important;
            overflow: hidden !important;
            text-overflow: ellipsis !important;
            height: 42px !important;
            line-height: 42px !important;
            padding-right: 20px !important;
        }
        
        /* Ensure the selection clear button is visible */
        .select2-selection__clear {
            position: absolute !important;
            right: 10px !important;
            top: 50% !important;
            transform: translateY(-50%) !important;
        }
        
        /* Style for selection/deselection buttons */
        .select2-buttons-container {
            padding: 8px !important;
            border-bottom: 1px solid #dbe8c6 !important;
            text-align: center !important;
            background-color: #f8f9fa !important;
        }
        
        .select2-select-all, .select2-deselect-all {
            display: inline-block !important;
            padding: 4px 8px !important;
            margin: 0 4px !important;
            border-radius: 4px !important;
            cursor: pointer !important;
            font-size: 12px !important;
            transition: all 0.2s !important;
        }
        
        .select2-select-all {
            background-color: #89AC46 !important;
            color: white !important;
            border: 1px solid #89AC46 !important;
        }
        
        .select2-deselect-all {
            background-color: #f8f9fa !important;
            color: #89AC46 !important;
            border: 1px solid #89AC46 !important;
        }
        
        .select2-select-all:hover {
            background-color: #7a9a3e !important;
        }
        
        .select2-deselect-all:hover {
            background-color: #e9ecef !important;
        }
        
        .select-count {
            display: inline-block !important;
            padding: 0 8px !important;
            background-color: #D3E671 !important;
            color: #556b29 !important;
            border-radius: 20px !important;
            margin-left: 5px !important;
            font-size: 11px !important;
            line-height: 20px !important;
            height: 20px !important;
        }
    </style>
}

<div class="container my-5">
    <div class="mb-4">
        <h2 class="mb-4 text-primary">Tìm kiếm sinh viên</h2>
    </div>

    <div class="card mb-4 search-card">
        <div class="card-header filter-header">
            <i class="bi bi-funnel-fill me-2"></i>Bộ lọc tìm kiếm
        </div>
        <div class="card-body">
            <form method="get" asp-action="SearchStudents">
                <div class="row mb-4">
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Tên, Email hoặc Trường</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" name="query" value="@ViewBag.Query" class="form-control" placeholder="Nhập từ khóa tìm kiếm...">
                        </div>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label class="form-label">Kỹ năng</label>
                        <select id="skillSelect" name="skillIds" class="form-select" multiple="multiple">
                            @foreach (var category in categories)
                            {
                                <optgroup label="@category.CategoryName">
                                    @foreach (var skill in skills.Where(s => s.CategoryID == category.CategoryID))
                                    {
                                        if (selectedSkillIds.Contains(skill.SkillID))
                                        {
                                            <option value="@skill.SkillID" selected>@skill.SkillName</option>
                                        }
                                        else
                                        {
                                            <option value="@skill.SkillID">@skill.SkillName</option>
                                        }
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label class="form-label">Tỉnh/Thành phố</label>
                        <select name="provinceCode" class="form-select">
                            <option value="">-- Tất cả --</option>
                            @foreach (var province in ViewBag.Provinces)
                            {
                                if (ViewBag.ProvinceCode != null && ViewBag.ProvinceCode == province.ID)
                                {
                                    <option value="@province.ID" selected>@province.Name</option>
                                }
                                else
                                {
                                    <option value="@province.ID">@province.Name</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-12 mt-2 text-center">
                        <button type="submit" class="btn btn-primary px-4">
                            <i class="bi bi-search me-2"></i>Tìm kiếm
                        </button>
                        <a href="@Url.Action("SearchStudents", "Search")" class="btn btn-outline-secondary ms-2">
                            <i class="bi bi-x-circle me-2"></i>Xóa bộ lọc
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row student-list mt-4">
        @if (students.Any())
        {
            foreach (var student in students)
            {
                var studentSkills = ViewBag.StudentSkills.ContainsKey(student.Id)
                    ? ViewBag.StudentSkills[student.Id]
                    : new List<StudentFreelance.Models.StudentSkill>();
                
                <div class="col-md-12 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2 text-center">
                                    @if (!string.IsNullOrEmpty(student.ProfilePicturePath))
                                    {
                                        <img src="@student.ProfilePicturePath" alt="@student.FullName" class="img-fluid rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                    }
                                    else if (!string.IsNullOrEmpty(student.Avatar))
                                    {
                                        <img src="@student.Avatar" alt="@student.FullName" class="img-fluid rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="profile-avatar-placeholder mb-2" style="width: 100px; height: 100px; font-size: 36px;">
                                            @(student.FullName?.Length > 0 ? student.FullName[0].ToString() : "?")
                                        </div>
                                    }
                                </div>
                                <div class="col-md-7">
                                    <h5 class="student-name">@student.FullName</h5>
                                    
                                    <div class="mb-2">
                                        @if (!string.IsNullOrEmpty(student.University))
                                        {
                                            <div><i class="bi bi-mortarboard-fill me-2"></i>@student.University</div>
                                        }
                                        @if (!string.IsNullOrEmpty(student.Major))
                                        {
                                            <div><i class="bi bi-journal-bookmark-fill me-2"></i>@student.Major</div>
                                        }
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="info-badge rating-badge me-2">
                                            <i class="bi bi-star-fill me-1"></i>
                                            @(student.AverageRating > 0 ? student.AverageRating.ToString("F1") : "Chưa có đánh giá")
                                        </div>
                                        <div class="info-badge project-badge">
                                            <i class="bi bi-briefcase-fill me-1"></i>
                                            @student.TotalProjects hoàn thành
                                        </div>
                                    </div>

                                    <div class="mt-3">
                                        <h6 class="skills-title">Kỹ năng</h6>
                                        <div>
                                            @{
                                                var userSkills = ViewBag.StudentSkills != null && ViewBag.StudentSkills.ContainsKey(student.Id) 
                                                    ? ViewBag.StudentSkills[student.Id] 
                                                    : new List<StudentFreelance.Models.StudentSkill>();
                                            }
                                            @if (userSkills != null && userSkills.Count > 0)
                                            {
                                                var skillCounter = 0;
                                                var maxSkillsToShow = 5;
                                                
                                                @foreach (var ss in userSkills)
                                                {
                                                    if (skillCounter < maxSkillsToShow)
                                                    {
                                                        <span class="skill-tag">
                                                            @ss.Skill.SkillName
                                                            <span class="skill-level">(@ss.ProficiencyLevel.LevelName)</span>
                                                        </span>
                                                        skillCounter++;
                                                    }
                                                }
                                                
                                                @if (userSkills.Count > maxSkillsToShow)
                                                {
                                                    <span class="skill-tag">+@(userSkills.Count - maxSkillsToShow) khác</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa có kỹ năng</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex align-items-center justify-content-center">
                                    <a href="@Url.Action("Profile", "User", new { id = student.Id })" class="btn btn-view-profile btn-lg">
                                        <i class="bi bi-person-badge me-1"></i>Xem hồ sơ
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    Không tìm thấy sinh viên nào phù hợp. Vui lòng thử lại với tiêu chí khác.
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Fix cho dropdown phải bấm 2 lần
            // Hủy bỏ tất cả các event handlers đã gắn vào trước đó
            $('select[name="provinceCode"]').off();
            $('#skillSelect').off();
            
            // Khởi tạo lại Select2 với tùy chọn mới
            $('select[name="provinceCode"]').select2({
                placeholder: "Chọn tỉnh/thành phố...",
                allowClear: true,
                dropdownCssClass: 'province-dropdown',
                width: '100%'
            }).on('select2:open', function() {
                // Đảm bảo dropdown hiển thị đúng vị trí và z-index
                setTimeout(function() {
                    $('.province-dropdown').parent().css('z-index', '10000');
                }, 0);
            });
            
            // Skills dropdown using Select2
            $('#skillSelect').select2({
                placeholder: "Chọn kỹ năng...",
                allowClear: true,
                closeOnSelect: false,
                width: '100%',
                dropdownCssClass: 'select2-dropdown-skills',
                templateResult: formatSkill,
                maximumSelectionLength: 15,
                language: {
                    noResults: function() {
                        return "Không tìm thấy kỹ năng";
                    },
                    maximumSelected: function() {
                        return "Bạn chỉ có thể chọn tối đa 15 kỹ năng";
                    }
                }
            }).on('select2:open', function() {
                // Đảm bảo dropdown hiển thị đúng vị trí và z-index
                setTimeout(function() {
                    $('.select2-dropdown-skills').parent().css('z-index', '10000');
                    $('.select2-dropdown').css('z-index', '10000');
                    
                    // Thêm nút chọn tất cả và xóa tất cả nếu chưa có
                    if ($('.select2-buttons-container').length === 0) {
                        var $dropdown = $('.select2-dropdown-skills');
                        var selectAllButton = '<div class="select2-buttons-container">' +
                                             '<span class="select2-select-all">Chọn tất cả</span>' +
                                             '<span class="select2-deselect-all">Hủy chọn tất cả</span>' +
                                             '</div>';
                        $dropdown.prepend(selectAllButton);
                        
                        // Xử lý sự kiện khi nhấn "Chọn tất cả"
                        $('.select2-select-all').on('click', function() {
                            var options = $('#skillSelect option');
                            var values = [];
                            options.each(function() {
                                values.push($(this).val());
                            });
                            $('#skillSelect').val(values).trigger('change');
                        });
                        
                        // Xử lý sự kiện khi nhấn "Hủy chọn tất cả"
                        $('.select2-deselect-all').on('click', function() {
                            $('#skillSelect').val(null).trigger('change');
                        });
                    }
                }, 0);
            });
            
            // Cập nhật label hiển thị số lượng đã chọn
            $('#skillSelect').on('change', function() {
                updateSelectedSkillsLabel();
            });
            
            function updateSelectedSkillsLabel() {
                var selectedCount = $('#skillSelect').val() ? $('#skillSelect').val().length : 0;
                var $renderContainer = $('#skillSelect').siblings('.select2-container').find('.select2-selection__rendered');
                
                if (selectedCount > 0) {
                    if (selectedCount === 1) {
                        var selectedText = $('#skillSelect option:selected').text();
                        $renderContainer.html('<span>' + selectedText + '</span>');
                    } else {
                        $renderContainer.html('<span>Đã chọn <span class="select-count">' + selectedCount + '</span> kỹ năng</span>');
                    }
                }
            }
            
            // Định dạng hiển thị kỹ năng
            function formatSkill(skill) {
                if (!skill.id) {
                    return skill.text;
                }
                
                return $('<span>' + skill.text + '</span>');
            }
            
            // Đảm bảo dropdown luôn hiển thị phía trên khi cuộn trang
            $(window).on('scroll resize', function() {
                var openDropdown = $(".select2-container--open");
                if (openDropdown.length) {
                    openDropdown.css({
                        'z-index': '10000',
                        'position': 'absolute'
                    });
                }
            });
            
            // Sửa lỗi click bị double
            $('span.select2').on('click', function(e) {
                // Ngăn sự kiện click lan truyền đến các phần tử cha
                e.stopPropagation();
            });
            
            // Đảm bảo các dropdowns khởi tạo đúng
            setTimeout(function() {
                $('select[name="provinceCode"]').trigger('select2:close').trigger('select2:open').trigger('select2:close');
                $('#skillSelect').trigger('select2:close');
                
                // Cập nhật label ban đầu
                updateSelectedSkillsLabel();
            }, 100);
        });
    </script>
} 