@model StudentFreelance.ViewModels.SearchStudentsViewModel
@using System.Linq
@{
    ViewData["Title"] = "Tìm kiếm sinh viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var students = Model.Students;
    var skills = Model.Skills;
    var categories = Model.Categories;
    var selectedSkillIds = Model.SelectedSkillIds;
    
    // Create a list of selected skills for display purposes
    var selectedSkills = new List<dynamic>();
    foreach (var skillId in selectedSkillIds)
    {
        var skill = skills.FirstOrDefault(s => s.SkillID == skillId);
        if (skill != null)
        {
            selectedSkills.Add(new { SkillID = skill.SkillID, SkillName = skill.SkillName });
        }
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/search/searchStudents.css" asp-append-version="true" />
}

<div class="container my-5">
    <div class="mb-4">
        <h2 class="mb-4 text-primary">Tìm kiếm sinh viên</h2>
    </div>

    <div class="card mb-4 search-card">
        <div class="card-header bg-secondary text-white">
            <i class="bi bi-funnel-fill me-2"></i>Bộ lọc tìm kiếm
        </div>
        <div class="card-body">
            <form method="get" asp-action="SearchStudents">
                <div class="row mb-4">
                    <div class="col-md-4 mb-3">
                        <label class="form-label">Tên, Email hoặc Trường</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" name="query" value="@ViewBag.Query" class="form-control" placeholder="Nhập từ khóa tìm kiếm...">
                        </div>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label class="form-label">Kỹ năng</label>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle w-100 text-start" type="button" id="skillDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <span id="selectedSkillsText">
                                    @if (selectedSkillIds.Any())
                                    {
                                        <span>@selectedSkillIds.Count kỹ năng đã chọn</span>
                                    }
                                    else
                                    {
                                        <span>Chọn kỹ năng...</span>
                                    }
                                </span>
                            </button>
                            <div class="dropdown-menu skill-dropdown-menu p-0 w-100" aria-labelledby="skillDropdown" data-bs-popper="static">
                                <div class="skill-search p-2 border-bottom">
                                    <input type="text" class="form-control form-control-sm" id="skillSearchInput" placeholder="Tìm kiếm kỹ năng...">
                                </div>
                                <div class="skill-categories" style="max-height: 300px; overflow-y: auto;">
                                    @foreach (var category in categories)
                                    {
                                        <div class="skill-category">
                                            <div class="dropdown-header fw-bold">@category.CategoryName</div>
                                            @foreach (var skill in skills.Where(s => s.CategoryID == category.CategoryID))
                                            {
                                                <div class="dropdown-item">
                                                    <div class="form-check">
                                                        <input class="form-check-input skill-checkbox" type="checkbox" value="@skill.SkillID" 
                                                               id="skill_@skill.SkillID" name="skillIds" 
                                                               @(selectedSkillIds.Contains(skill.SkillID) ? "checked" : "")>
                                                        <label class="form-check-label w-100" for="skill_@skill.SkillID">
                                                            @skill.SkillName
                                                        </label>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                <div class="dropdown-divider m-0"></div>
                                <div class="p-2 d-flex justify-content-between">
                                    <a href="@Url.Action("SearchStudents", "Search", new { query = ViewBag.Query, provinceId = ViewBag.ProvinceId })" 
                                       class="btn btn-sm btn-outline-danger" id="clearSkills">Hủy chọn</a>
                                    <button type="submit" class="btn btn-sm btn-primary">Áp dụng</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4 mb-3">
                        <label class="form-label">Tỉnh/Thành phố</label>
                        <select name="provinceId" class="form-select">
                            <option value="">-- Tất cả --</option>
                            @foreach (var province in ViewBag.Provinces)
                            {
                                var selected = ViewBag.ProvinceId != null && ViewBag.ProvinceId == province.ProvinceID;
                                <option value="@province.ProvinceID" selected="@selected">
                                    @province.Name
                                </option>
                            }
                        </select>
                    </div>

                    <div class="col-md-12 mt-2 text-center">
                        <button type="submit" class="btn btn-primary px-4">
                            <i class="bi bi-search me-2"></i>Tìm kiếm
                        </button>
                        <a href="@Url.Action("SearchStudents", "Search")" class="btn btn-outline-secondary ms-2">
                            <i class="bi bi-x-circle me-2"></i>Xóa bộ lọc
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row student-list mt-4">
        @if (students.Any())
        {
            foreach (var student in students)
            {
                var studentSkills = ViewBag.StudentSkills.ContainsKey(student.Id)
                    ? ViewBag.StudentSkills[student.Id]
                    : new List<StudentFreelance.Models.StudentSkill>();
                
                <div class="col-md-12 mb-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2 text-center">
                                    @if (!string.IsNullOrEmpty(student.ProfilePicturePath))
                                    {
                                        <img src="@student.ProfilePicturePath" alt="@student.FullName" class="img-fluid rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                    }
                                    else if (!string.IsNullOrEmpty(student.Avatar))
                                    {
                                        <img src="@student.Avatar" alt="@student.FullName" class="img-fluid rounded-circle mb-2" style="width: 100px; height: 100px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="profile-avatar-placeholder mb-2" style="width: 100px; height: 100px; font-size: 36px;">
                                            @(student.FullName?.Length > 0 ? student.FullName[0].ToString() : "?")
                                        </div>
                                    }
                                </div>
                                <div class="col-md-7">
                                    <h5 class="student-name">@student.FullName</h5>
                                    
                                    <div class="mb-2">
                                        @if (!string.IsNullOrEmpty(student.University))
                                        {
                                            <div><i class="bi bi-mortarboard-fill me-2"></i>@student.University</div>
                                        }
                                        @if (!string.IsNullOrEmpty(student.Major))
                                        {
                                            <div><i class="bi bi-journal-bookmark-fill me-2"></i>@student.Major</div>
                                        }
                                    </div>
                                    
                                    <div class="mb-3">
                                        <div class="info-badge rating-badge me-2">
                                            <i class="bi bi-star-fill me-1"></i>
                                            @(student.AverageRating > 0 ? student.AverageRating.ToString("F1") : "Chưa có đánh giá")
                                        </div>
                                        <div class="info-badge project-badge">
                                            <i class="bi bi-briefcase-fill me-1"></i>
                                            @student.TotalProjects hoàn thành
                                        </div>
                                    </div>
                                    
                                    <div class="mt-3">
                                        <h6 class="skills-title">Kỹ năng</h6>
                                        <div>
                                            @if (studentSkills != null && studentSkills.Count > 0)
                                            {
                                                var skillCounter = 0;
                                                var maxSkillsToShow = 5;
                                                
                                                @foreach (var ss in studentSkills)
                                                {
                                                    if (skillCounter < maxSkillsToShow)
                                                    {
                                                        <span class="skill-tag">
                                                            @ss.Skill.SkillName
                                                            <span class="skill-level">(@ss.ProficiencyLevel.LevelName)</span>
                                                        </span>
                                                        skillCounter++;
                                                    }
                                                }
                                                
                                                @if (studentSkills.Count > maxSkillsToShow)
                                                {
                                                    <span class="skill-tag">+@(studentSkills.Count - maxSkillsToShow) khác</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa có kỹ năng</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3 d-flex align-items-center justify-content-center">
                                    <a href="@Url.Action("Profile", "User", new { id = student.Id })" class="btn btn-view-profile btn-lg">
                                        <i class="bi bi-person-badge me-1"></i>Xem hồ sơ
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    Không tìm thấy sinh viên nào phù hợp. Vui lòng thử lại với tiêu chí khác.
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Province dropdown using Select2
            $('select[name="provinceId"]').select2({
                placeholder: "Chọn tỉnh/thành phố...",
                allowClear: true
            });
            
            // Prevent dropdown from closing when clicking inside
            $(document).on('click', '.skill-dropdown-menu', function (e) {
                e.stopPropagation();
            });
            
            // Fix dropdown positioning
            $('#skillDropdown').on('click', function() {
                setTimeout(function() {
                    var dropdownMenu = $('.skill-dropdown-menu');
                    var dropdownButton = $('#skillDropdown');
                    var buttonWidth = dropdownButton.outerWidth();
                    
                    dropdownMenu.css({
                        'width': buttonWidth + 'px',
                        'min-width': buttonWidth + 'px',
                        'left': '0',
                        'right': 'auto',
                        'transform': 'translate(0, 42px)'
                    });
                }, 0);
            });
            
            // Ensure dropdown is positioned correctly when shown
            $('.dropdown').on('shown.bs.dropdown', function () {
                var dropdownMenu = $(this).find('.skill-dropdown-menu');
                var dropdownButton = $(this).find('.dropdown-toggle');
                var buttonWidth = dropdownButton.outerWidth();
                
                dropdownMenu.css({
                    'width': buttonWidth + 'px',
                    'min-width': buttonWidth + 'px',
                    'left': '0',
                    'right': 'auto',
                    'transform': 'translate(0, 42px)'
                });
            });
            
            // Update selected skills count
            function updateSelectedSkillsText() {
                var checkedCount = $('.skill-checkbox:checked').length;
                if (checkedCount > 0) {
                    $('#selectedSkillsText').html('<span>' + checkedCount + ' kỹ năng đã chọn</span>');
                } else {
                    $('#selectedSkillsText').html('<span>Chọn kỹ năng...</span>');
                }
            }
            
            // Prevent dropdown from closing when clicking on clearSkills link
            $('#clearSkills').on('click', function(e) {
                e.stopPropagation();
            });
            
            // Search functionality
            $('#skillSearchInput').on('input', function() {
                var searchText = $(this).val().toLowerCase();
                
                $('.skill-category').each(function() {
                    var category = $(this);
                    var header = category.find('.dropdown-header');
                    var items = category.find('.dropdown-item');
                    var hasVisibleItems = false;
                    
                    items.each(function() {
                        var skillName = $(this).find('label').text().toLowerCase();
                        if (skillName.includes(searchText)) {
                            $(this).show();
                            hasVisibleItems = true;
                        } else {
                            $(this).hide();
                        }
                    });
                    
                    // Show/hide category header based on visible items
                    if (hasVisibleItems) {
                        header.show();
                    } else {
                        header.hide();
                    }
                });
            });
            
            // Update count when checkbox changes
            $('.skill-checkbox').on('change', function() {
                updateSelectedSkillsText();
            });
            
            // Initialize
            updateSelectedSkillsText();
        });
    </script>
} 