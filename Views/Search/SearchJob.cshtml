@model IEnumerable<StudentFreelance.Models.Project>
@{
    ViewData["Title"] = "Kết quả tìm kiếm";
    
    var importanceLevels = ViewBag.ImportanceLevels as List<StudentFreelance.Models.Enums.ImportanceLevel> ?? new List<StudentFreelance.Models.Enums.ImportanceLevel>();
    var proficiencyLevels = ViewBag.ProficiencyLevels as List<StudentFreelance.Models.Enums.ProficiencyLevel> ?? new List<StudentFreelance.Models.Enums.ProficiencyLevel>();
    
    // Lấy các giá trị để hiển thị thông tin tìm kiếm
    var query = ViewBag.Query as string ?? string.Empty;
    var location = ViewBag.Location as string ?? string.Empty;
    var categoryId = ViewBag.CategoryId as int? ?? null;
    var skillIds = ViewBag.SkillIds as List<int> ?? new List<int>();
    var userId = ViewBag.UserId as int? ?? null;
    var provinceId = ViewBag.ProvinceId as int? ?? null;
    
    var categories = ViewBag.Categories as List<StudentFreelance.Models.Category> ?? new List<StudentFreelance.Models.Category>();
    var skills = ViewBag.Skills as List<StudentFreelance.Models.Skill> ?? new List<StudentFreelance.Models.Skill>();
    var businessUsers = ViewBag.BusinessUsers as List<StudentFreelance.Models.ApplicationUser> ?? new List<StudentFreelance.Models.ApplicationUser>();
    var provinces = ViewBag.Provinces as List<StudentFreelance.Models.Province> ?? new List<StudentFreelance.Models.Province>();
    
    var selectedCategory = categoryId.HasValue ? categories.FirstOrDefault(c => c.CategoryID == categoryId) : null;
    var selectedBusiness = userId.HasValue ? businessUsers.FirstOrDefault(u => u.Id == userId) : null;
    var selectedProvince = provinceId.HasValue ? provinces.FirstOrDefault(p => p.ProvinceID == provinceId) : null;
    
    var selectedSkills = skills.Where(s => skillIds.Contains(s.SkillID)).ToList();
}

<div class="container mt-4">
    <h2>Kết quả tìm kiếm</h2>
    
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <p>Tìm thấy @Model.Count() dự án</p>
            @if (!string.IsNullOrEmpty(query) || !string.IsNullOrEmpty(location) || categoryId.HasValue || skillIds.Any() || userId.HasValue || provinceId.HasValue)
            {
                <p class="text-muted small">
                    Tiêu chí tìm kiếm: 
                    @if (!string.IsNullOrEmpty(query)) { <span class="badge bg-secondary me-1">Từ khóa: @query</span> }
                    @if (!string.IsNullOrEmpty(location)) { <span class="badge bg-secondary me-1">Địa điểm: @location</span> }
                    @if (selectedCategory != null) { <span class="badge bg-secondary me-1">Danh mục: @selectedCategory.CategoryName</span> }
                    @if (selectedSkills.Any()) 
                    { 
                        foreach (var skill in selectedSkills)
                        {
                            <span class="badge bg-secondary me-1">Kỹ năng: @skill.SkillName</span>
                        }
                    }
                    @if (selectedBusiness != null) { <span class="badge bg-secondary me-1">Công ty: @selectedBusiness.CompanyName</span> }
                    @if (selectedProvince != null) { <span class="badge bg-secondary me-1">Địa điểm: @selectedProvince.Name</span> }
                </p>
            }
        </div>
        <div class="btn-group">
            <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                Sắp xếp
            </button>
            <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="#" onclick="sortProjects('newest')">Mới nhất</a></li>
                <li><a class="dropdown-item" href="#" onclick="sortProjects('budget-desc')">Ngân sách cao nhất</a></li>
                <li><a class="dropdown-item" href="#" onclick="sortProjects('budget-asc')">Ngân sách thấp nhất</a></li>
                <li><a class="dropdown-item" href="#" onclick="sortProjects('deadline')">Gần hết hạn</a></li>
            </ul>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info mt-3">
            Không tìm thấy dự án phù hợp với tiêu chí tìm kiếm.
        </div>
    }
    else
    {
        <div class="row mt-3" id="projects-container">
            @foreach (var project in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4 project-card" 
                     data-created="@project.CreatedAt.Ticks" 
                     data-budget="@project.Budget" 
                     data-deadline="@project.Deadline.Ticks">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <span class="badge bg-primary">@project.Budget.ToString("N0") VNĐ</span>
                            <span class="badge bg-@(project.Status.StatusName == "Đang tuyển" ? "success" : "secondary")">
                                @project.Status.StatusName
                            </span>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@project.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">
                                <i class="bi bi-folder"></i> @project.Category.CategoryName
                                <span class="ms-2"><i class="bi bi-clock"></i> @project.Type.TypeName</span>
                            </h6>
                            
                            @if (project.Address?.Province != null)
                            {
                                <p class="card-text mb-2">
                                    <i class="bi bi-geo-alt"></i> @project.Address.Province.Name
                                    @if (!string.IsNullOrEmpty(project.Address.DetailAddress))
                                    {
                                        <span class="text-muted"> - @project.Address.DetailAddress</span>
                                    }
                                </p>
                            }
                            else if (project.IsRemoteWork)
                            {
                                <p class="card-text mb-2">
                                    <i class="bi bi-laptop"></i> <span class="badge bg-info text-dark">Làm việc từ xa</span>
                                </p>
                            }
                            
                            <p class="card-text">
                                @(project.Description?.Length > 100 
                                    ? project.Description.Substring(0, 100) + "..." 
                                    : project.Description)
                            </p>
                            
                            @if (project.ProjectSkillsRequired.Any())
                            {
                                <div class="mb-2">
                                    <small class="text-muted">Kỹ năng yêu cầu:</small>
                                    <div>
                                        @foreach (var skill in project.ProjectSkillsRequired.Take(3))
                                        {
                                            <span class="badge rounded-pill bg-light text-dark me-1">
                                                @skill.Skill.SkillName
                                                @if (skill.ImportanceLevel != null)
                                                {
                                                    <small class="text-@(skill.ImportanceLevel.LevelName == "Bắt buộc" ? "danger" : "primary")">
                                                        (@skill.ImportanceLevel.LevelName)
                                                    </small>
                                                }
                                            </span>
                                        }
                                        @if (project.ProjectSkillsRequired.Count() > 3)
                                        {
                                            <span class="badge rounded-pill bg-light text-dark">+@(project.ProjectSkillsRequired.Count() - 3)</span>
                                        }
                                    </div>
                                </div>
                            }
                            
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">Hạn nộp: @project.Deadline.ToString("dd/MM/yyyy")</small>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <i class="bi bi-building"></i> @project.Business.CompanyName
                                </small>
                                <a href="#" class="btn btn-sm btn-outline-primary">Chi tiết</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function sortProjects(sortBy) {
            const container = document.getElementById('projects-container');
            const projects = Array.from(container.getElementsByClassName('project-card'));
            
            projects.sort((a, b) => {
                switch(sortBy) {
                    case 'newest':
                        return b.dataset.created - a.dataset.created;
                    case 'budget-desc':
                        return b.dataset.budget - a.dataset.budget;
                    case 'budget-asc':
                        return a.dataset.budget - b.dataset.budget;
                    case 'deadline':
                        return a.dataset.deadline - b.dataset.deadline;
                    default:
                        return 0;
                }
            });
            
            projects.forEach(project => container.appendChild(project));
        }
    </script>
} 