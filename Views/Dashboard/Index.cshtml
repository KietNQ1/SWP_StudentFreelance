@model StudentFreelance.ViewModels.AdminDashboardViewModel
@using System.Text.Json
@{
    Layout = null;
    ViewData["Title"] = "Admin Dashboard";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary: #89AC46;
            --accent1: #D3E671;
            --accent2: #F8ED8C;
            --accent3: #FF8989;
        }

        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            background-color: #F8F8F8;
        }

        .layout {
            display: flex;
        }

        .sidebar {
            width: 260px;
            background-color: #fff;
            height: 100vh;
            border-right: 1px solid #ddd;
            padding: 1.5rem 1rem;
        }

        .sidebar-menu a,
        .dropdown-toggle {
            display: block;
            padding: 10px 15px;
            color: #333;
            text-decoration: none;
            border-radius: 6px;
            font-weight: 500;
        }

            .sidebar-menu a:hover,
            .dropdown.open > .dropdown-toggle {
                background-color: #f0f0f0;
            }

        .dropdown-menu {
            display: none;
            padding-left: 1rem;
        }

        .dropdown.open .dropdown-menu {
            display: block;
        }

        .main {
            flex: 1;
            padding: 2rem;
        }

        .dashboard-header {
            font-size: 2rem;
            font-weight: bold;
            color: var(--primary);
            margin-bottom: 2rem;
        }

        .card-metric {
            background-color: white;
            border-left: 6px solid var(--primary);
            border-radius: 10px;
            padding: 1rem 1.5rem;
            margin-bottom: 1rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
        }

            .card-metric h5 {
                font-size: 1rem;
                color: #444;
                margin-bottom: 0.5rem;
            }

            .card-metric .value {
                font-size: 2rem;
                font-weight: bold;
                color: #222;
            }

        .section-title {
            margin-top: 2rem;
            font-weight: 600;
            color: var(--primary);
            font-size: 1.25rem;
        }

        .list-group-item {
            background-color: white;
            border: none;
            border-bottom: 1px solid #eee;
        }

            .list-group-item strong {
                color: #222;
            }

        .text-success {
            color: #4CAF50 !important;
        }

        .text-warning {
            color: #FFC107 !important;
        }

        canvas {
            background: #fff;
            border-radius: 12px;
            padding: 1rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
    </style>
</head>
<body>
    <div class="layout">
        <!-- Sidebar -->
        <aside class="sidebar">
            <nav class="sidebar-menu">
                <a href="#">Dashboard</a>
                <a href="#">Calendar</a>
                <div class="dropdown">
                    <button class="dropdown-toggle" onclick="toggleDropdown(this)">Profile</button>
                    <div class="dropdown-menu">
                        <a href="#">My Profile</a>
                        <a href="#">Freelancers</a>
                        <a href="#">Companies</a>
                    </div>
                </div>
                <div class="dropdown">
                    <button class="dropdown-toggle" onclick="toggleDropdown(this)">Customer Management</button>
                    <div class="dropdown-menu">
                        <a href="#">Freelancers</a>
                        <a href="#">Companies</a>
                    </div>
                </div>
                <a href="#">Project Management</a>
                <a href="#">Applications</a>
                <a href="#">Payments</a>
                <a href="#">Reviews & Reports</a>
                <a href="#">System Settings</a>
            </nav>
        </aside>

        <!-- Main content -->
        <main class="main container-fluid">
            <div class="dashboard-header">📊 Admin Dashboard</div>

            <!-- Charts -->
            <div class="row g-4 mb-4">
                <div class="col-md-4">
                    <h5 class="section-title">📊 Dự án theo trạng thái</h5>
                    <canvas id="projectStatusChart" height="220"></canvas>
                </div>
                <div class="col-md-4">
                    <h5 class="section-title">🍩 Người dùng theo vai trò</h5>
                    <canvas id="userRoleChart" height="220"></canvas>
                </div>
                <div class="col-md-4">
                    <h5 class="section-title">📈 Doanh thu theo tháng</h5>
                    <canvas id="revenueChart" height="220"></canvas>
                </div>
            </div>

            <!-- Metrics -->
            <div class="row g-4">
                <div class="col-md-3"><div class="card-metric"><h5>👥 Tổng người dùng</h5><div class="value">@Model.TotalUsers</div></div></div>
                <div class="col-md-3"><div class="card-metric"><h5>🎓 Sinh viên</h5><div class="value">@Model.TotalStudents</div></div></div>
                <div class="col-md-3"><div class="card-metric"><h5>🏢 Doanh nghiệp</h5><div class="value">@Model.TotalBusiness</div></div></div>
                <div class="col-md-3"><div class="card-metric"><h5>💰 Doanh thu (VNĐ)</h5><div class="value">@Model.TotalRevenue.ToString("N0")</div></div></div>
            </div>
            <div class="row g-4">
                <div class="col-md-4"><div class="card-metric"><h5>📁 Tổng dự án</h5><div class="value">@Model.TotalProjects</div></div></div>
                <div class="col-md-4"><div class="card-metric"><h5>✅ Hoàn thành</h5><div class="value text-success">@Model.CompletedProjects</div></div></div>
                <div class="col-md-4"><div class="card-metric"><h5>📌 Đang tuyển</h5><div class="value text-warning">@Model.OngoingProjects</div></div></div>
            </div>

            <!-- New Users -->
            <div class="section-title">🆕 Người dùng mới</div>
            <ul class="list-group mb-4">
                @foreach (var user in Model.RecentUsers)
                {
                    <li class="list-group-item d-flex justify-content-between">
                        <strong>@(user.FullName ?? user.Email)</strong>
                        <span class="text-muted">@user.CreatedAt.ToString("dd/MM/yyyy")</span>
                    </li>
                }
            </ul>

            <!-- Recent Projects -->
            <div class="section-title">📁 Dự án gần đây</div>
            <ul class="list-group mb-5">
                @foreach (var project in Model.RecentProjects)
                {
                    <li class="list-group-item d-flex justify-content-between">
                        <strong>@project.Title</strong>
                        <span class="text-muted">@project.CreatedAt.ToString("dd/MM/yyyy")</span>
                    </li>
                }
            </ul>
        </main>
    </div>

    <script>
        function toggleDropdown(button) {
            button.closest(".dropdown").classList.toggle("open");
        }

        const palette = ['#89AC46', '#D3E671', '#F8ED8C', '#FF8989'];

        function generateColors(count) {
            const colors = [];
            for (let i = 0; i < count; i++) {
                colors.push(palette[i % palette.length]);
            }
            return colors;
        }

        const projectLabels = @Html.Raw(JsonSerializer.Serialize(Model.ProjectStatusCounts.Keys));
        const projectData = @Html.Raw(JsonSerializer.Serialize(Model.ProjectStatusCounts.Values));
        const projectColors = generateColors(projectLabels.length);

        new Chart(document.getElementById('projectStatusChart'), {
            type: 'bar',
            data: {
                labels: projectLabels,
                datasets: [{
                    label: 'Số lượng dự án',
                    data: projectData,
                    backgroundColor: projectColors
                }]
            },
            options: { responsive: true, plugins: { legend: { display: false } } }
        });

        const roleLabels = @Html.Raw(JsonSerializer.Serialize(Model.UserRoleCounts.Keys));
        const roleData = @Html.Raw(JsonSerializer.Serialize(Model.UserRoleCounts.Values));
        const roleColors = generateColors(roleLabels.length);

        new Chart(document.getElementById('userRoleChart'), {
            type: 'doughnut',
            data: {
                labels: roleLabels,
                datasets: [{ data: roleData, backgroundColor: roleColors }]
            }
        });

        new Chart(document.getElementById('revenueChart'), {
            type: 'line',
            data: {
                labels: @Html.Raw(JsonSerializer.Serialize(Model.MonthlyRevenue.Keys)),
                datasets: [{
                    label: 'Doanh thu theo tháng',
                    data: @Html.Raw(JsonSerializer.Serialize(Model.MonthlyRevenue.Values)),
                    borderColor: '#FF8989',
                    backgroundColor: 'rgba(255,137,137,0.2)',
                    fill: true,
                    tension: 0.3
                }]
            },
            options: { responsive: true }
        });
    </script>
</body>
</html>
