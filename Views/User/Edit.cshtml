@model StudentFreelance.ViewModels.UserProfileViewModel

@{
    ViewData["Title"] = "Chỉnh sửa thông tin cá nhân";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/user/profile.css" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet" />

<div class="edit-container">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Edit" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
        
        <div class="row">
            <!-- Avatar -->
            <div class="col-md-4 text-center mb-4">
                <div class="avatar-preview-container">
                    <img id="avatarPreviewImg" src="@(!string.IsNullOrEmpty(Model.AvatarPath) ? Model.AvatarPath : "/image/default-avatar.png")" />
                    <div class="form-group">
                        <label asp-for="AvatarImage" class="form-label">Chọn ảnh đại diện</label>
                        <input asp-for="AvatarImage" type="file" class="form-control" accept="image/*" onchange="previewAvatar(event)" />
                    </div>
                </div>
            </div>

            <!-- Thông tin -->
            <div class="col-md-8">
                <div class="edit-card">
                    <div class="edit-card-header">Thông tin cá nhân</div>
                    <div class="edit-card-body">
                        <div class="mb-3">
                            <label asp-for="FullName" class="form-label">Họ tên</label>
                            <input asp-for="FullName" class="form-control" />
                            <span asp-validation-for="FullName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PhoneNumber" class="form-label">Số điện thoại</label>
                            <input asp-for="PhoneNumber" class="form-control" />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        @if (Model.RoleId == 4) // Student
                        {
                            <div class="mb-3">
                                <label asp-for="University" class="form-label">Trường đại học</label>
                                <input asp-for="University" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <label asp-for="Major" class="form-label">Chuyên ngành</label>
                                <input asp-for="Major" class="form-control" />
                            </div>
                            
                            <!-- Buyer Persona Fields -->
                            <div class="mb-3">
                                <label asp-for="AgeRange" class="form-label">Độ tuổi</label>
                                <select asp-for="AgeRange" class="form-select">
                                    <option value="">-- Chọn độ tuổi --</option>
                                    <option value="18-24">18-24 tuổi</option>
                                    <option value="25-35">25-35 tuổi</option>
                                    <option value="36-45">36-45 tuổi</option>
                                    <option value="46+">46+ tuổi</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label asp-for="Gender" class="form-label">Giới tính</label>
                                <select asp-for="Gender" class="form-select">
                                    <option value="">-- Chọn giới tính --</option>
                                    <option value="Nam">Nam</option>
                                    <option value="Nữ">Nữ</option>
                                    <option value="Khác">Khác</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label asp-for="GoalsAndPainPoints" class="form-label">Goals And Pain Points</label>
                                <textarea asp-for="GoalsAndPainPoints" class="form-control" rows="4" 
                                          placeholder="Mô tả mục tiêu và khó khăn của bạn..."></textarea>
                            </div>
                        }
                        else if (Model.RoleId == 3) // Business
                        {
                            <div class="mb-3">
                                <label asp-for="CompanyName" class="form-label">Tên công ty</label>
                                <input asp-for="CompanyName" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <label asp-for="Industry" class="form-label">Ngành nghề</label>
                                <input asp-for="Industry" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <label asp-for="Website" class="form-label">Website</label>
                                <input asp-for="Website" class="form-control" placeholder="https://example.com" />
                            </div>
                            <div class="mb-3">
                                <label asp-for="BusinessActivities" class="form-label">Lĩnh vực hoạt động</label>
                                <textarea asp-for="BusinessActivities" class="form-control" rows="3" 
                                          placeholder="Nhập các lĩnh vực hoạt động, phân cách bằng dấu phẩy (,)"></textarea>
                                <small class="form-text text-muted">Ví dụ: Thiết kế đồ họa, Marketing, Quảng cáo, Truyền thông</small>
                            </div>
                        }
                    </div>
                </div>

                <!-- Địa chỉ -->
                <div class="edit-card">
                    <div class="edit-card-header">Địa chỉ</div>
                    <div class="edit-card-body">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label asp-for="ProvinceCode" class="form-label">Tỉnh/Thành</label>
                                <select asp-for="ProvinceCode" class="form-select" id="province-dropdown">
                                    <option value="">-- Chọn --</option>
                                    @foreach (var p in Model.Provinces)
                                    {
                                        @if (p.ID.ToString() == Model.ProvinceCode?.ToString())
                                        {
                                            <option value="@p.ID" selected>@p.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@p.ID">@p.Name</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="ProvinceCode" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="DistrictCode" class="form-label">Quận/Huyện</label>
                                <select asp-for="DistrictCode" class="form-select" id="district-dropdown">
                                    <option value="">-- Chọn --</option>
                                    @foreach (var d in Model.Districts)
                                    {
                                        @if (d.ID.ToString() == Model.DistrictCode?.ToString())
                                        {
                                            <option value="@d.ID" selected>@d.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@d.ID">@d.Name</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="DistrictCode" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="WardCode" class="form-label">Phường/Xã</label>
                                <select asp-for="WardCode" class="form-select" id="ward-dropdown">
                                    <option value="">-- Chọn --</option>
                                    @foreach (var w in Model.Wards)
                                    {
                                        @if (w.ID.ToString() == Model.WardCode?.ToString())
                                        {
                                            <option value="@w.ID" selected>@w.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@w.ID">@w.Name</option>
                                        }
                                    }
                                </select>
                                <span asp-validation-for="WardCode" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="DetailAddress" class="form-label">Địa chỉ chi tiết</label>
                            <input asp-for="DetailAddress" class="form-control" />
                            <span asp-validation-for="DetailAddress" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Kỹ năng -->
                @if (Model.RoleId != 3) // Hide Skills section for business users
                {
                    <div class="edit-card">
                        <div class="edit-card-header d-flex justify-content-between align-items-center">
                            Kỹ năng
                            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="addSkill()">+ Thêm</button>
                        </div>
                        <div class="edit-card-body" id="skills-container">
                            @for (int i = 0; i < Model.Skills.Count; i++)
                            {
                                <div class="skill-item">
                                    <select name="Skills[@i].SkillID" class="form-select">
                                        @foreach (var s in Model.AvailableSkills)
                                        {
                                            if (Model.Skills[i].SkillID.ToString() == s.ID)
                                            {
                                                <option value="@s.ID" selected>@s.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@s.ID">@s.Name</option>
                                            }
                                        }
                                    </select>
                                    <select name="Skills[@i].ProficiencyLevelID" class="form-select">
                                        @foreach (var l in Model.AvailableProficiencyLevels)
                                        {
                                            if (Model.Skills[i].ProficiencyLevelID.ToString() == l.ID)
                                            {
                                                <option value="@l.ID" selected>@l.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@l.ID">@l.Name</option>
                                            }
                                        }
                                    </select>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="this.parentElement.remove()">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="text-end mt-4">
            <a asp-action="Profile" class="btn btn-outline-secondary me-2">Quay lại</a>
            <button type="submit" class="btn btn-primary">Lưu thay đổi</button>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script>
        function previewAvatar(event) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('avatarPreviewImg').src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
        @if (Model.RoleId != 3) // Only include skills JavaScript for non-business users
        {
            <text>
            let skillIndex = @Model.Skills.Count;

            const skillList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AvailableSkills));
            const levelList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AvailableProficiencyLevels));

            function addSkill() {
                const container = document.getElementById("skills-container");

                const div = document.createElement("div");
                div.className = "skill-item";

                const skillSelect = document.createElement("select");
                skillSelect.name = `Skills[${skillIndex}].SkillID`;
                skillSelect.className = "form-select";
                skillList.forEach(s => {
                    const opt = document.createElement("option");
                    opt.value = s.ID;
                    opt.textContent = s.Name;
                    skillSelect.appendChild(opt);
                });

                const levelSelect = document.createElement("select");
                levelSelect.name = `Skills[${skillIndex}].ProficiencyLevelID`;
                levelSelect.className = "form-select";
                levelList.forEach(l => {
                    const opt = document.createElement("option");
                    opt.value = l.ID;
                    opt.textContent = l.Name;
                    levelSelect.appendChild(opt);
                });

                const removeBtn = document.createElement("button");
                removeBtn.type = "button";
                removeBtn.className = "btn btn-danger btn-sm";
                removeBtn.innerHTML = '<i class="fas fa-trash"></i>';
                removeBtn.onclick = () => div.remove();

                div.appendChild(skillSelect);
                div.appendChild(levelSelect);
                div.appendChild(removeBtn);
                container.appendChild(div);

                skillIndex++;
            }
            </text>
        }

        // Display any messages from TempData
        $(document).ready(function() {
            // Show success message if available
            @if (TempData["Success"] != null)
            {
                <text>
                showMessage("@TempData["Success"]", "success");
                </text>
            }
            
            // Show error message if available
            @if (TempData["Error"] != null)
            {
                <text>
                showMessage("@TempData["Error"]", "error");
                </text>
            }
            
            // Function to show messages
            function showMessage(message, type) {
                const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                const alertDiv = $(`<div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`);
                
                // Add alert to the top of the form
                $('.edit-container form').prepend(alertDiv);
                
                // Auto dismiss after 5 seconds
                setTimeout(() => {
                    alertDiv.alert('close');
                }, 5000);
            }
            
            // Form validation
            $('form').on('submit', function(e) {
                // Log form data for debugging
                console.log("Form submitted");
                console.log("ProvinceCode:", $("#province-dropdown").val());
                console.log("DistrictCode:", $("#district-dropdown").val());
                console.log("WardCode:", $("#ward-dropdown").val());
                console.log("DetailAddress:", $("#DetailAddress").val());
            });
        });

        $('#province-dropdown').on('change', function () {
            const provinceId = $(this).val();
            if (!provinceId) {
                // Clear district and ward dropdowns
                $('#district-dropdown').empty().append('<option value="">-- Chọn --</option>');
                $('#ward-dropdown').empty().append('<option value="">-- Chọn --</option>');
                return;
            }
            
            // Gọi API lấy quận/huyện
            $.get(`/User/GetDistricts?provinceId=${provinceId}`, function (data) {
                const $district = $('#district-dropdown');
                $district.empty().append('<option value="">-- Chọn --</option>');
                data.forEach(d => {
                    // Use the API ID directly as string
                    $district.append(`<option value="${d.id}">${d.name}</option>`);
                });
                $('#ward-dropdown').empty().append('<option value="">-- Chọn --</option>');
            }).fail(function(error) {
                console.error("Error fetching districts:", error);
                showMessage("Không thể lấy danh sách quận/huyện. Vui lòng thử lại sau.", "error");
            });
        });

        $('#district-dropdown').on('change', function () {
            const districtId = $(this).val();
            if (!districtId) {
                // Clear ward dropdown
                $('#ward-dropdown').empty().append('<option value="">-- Chọn --</option>');
                return;
            }
            
            // Gọi API lấy phường/xã
            $.get(`/User/GetWards?districtId=${districtId}`, function (data) {
                const $ward = $('#ward-dropdown');
                $ward.empty().append('<option value="">-- Chọn --</option>');
                data.forEach(w => {
                    // Use the API ID directly as string
                    $ward.append(`<option value="${w.id}">${w.name}</option>`);
                });
            }).fail(function(error) {
                console.error("Error fetching wards:", error);
                showMessage("Không thể lấy danh sách phường/xã. Vui lòng thử lại sau.", "error");
            });
        });
    </script>
}
